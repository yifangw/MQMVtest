library(MQMVtest)
library(MQMVtest)
getwd()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
rlang::last_trace()
rlang::last_trace(drop = FALSE)
devtools::document()
devtools::build_manual()
devtools::document()
devtools::build_manual()
devtools::document()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::document()
library(MQMVtest)
devtools::build_manual()
devtools::document()
library(MQMVtest)
library(QMVtest)
library(RNOmni)
library(lmtest)
unrelated = fread('/Users/weiyifang/Desktop/MQMVtest/data/unrelated.csv',header=TRUE)
library(data.table)
unrelated = fread('/Users/weiyifang/Desktop/MQMVtest/data/unrelated.csv',header=TRUE)
unrelated = as.data.frame(unrelated)
non_missing_idx <- !is.na(unrelated[,19])
# 基于非缺失索引筛选数据和GRM矩阵
non_missing_ids <- as.character(unrelated$IID[non_missing_idx])
# 筛选inddata，只保留非缺失样本
inddata_filtered <- unrelated[non_missing_idx, ]
inddata_filtered$HDL = inddata_filtered$HDL
# 逆正态变换
inddata_filtered$HDL = RankNorm(inddata_filtered$HDL)
inddata_filtered = as.matrix(inddata_filtered)
unrelated = inddata_filtered
unre_results_1 = TpMV_test(Genotype = unrelated[,19],
Y = unrelated[,'HDL'],
Sex = unrelated[,'SEX'],
Covariate = unrelated[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
method = 'all')
unre_results_1
unre_results_2 = TcMV_test(Genotype = unrelated[,19],
Y = unrelated[,'HDL'],
Sex = unrelated[,'SEX'],
Covariate = unrelated[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
method = 'all')
devtools::document()
unre_results_2 = TcMV_test(Genotype = unrelated[,19],
Y = unrelated[,'HDL'],
Sex = unrelated[,'SEX'],
Covariate = unrelated[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
method = 'all')
unre_results_2
mixed = fread('/Users/weiyifang/Desktop/MQMVtest/data/mixed.csv',header=TRUE)
mixed = as.data.frame(mixed)
pedigrees = fread('/Users/weiyifang/Desktop/MQMVtest/data/pedigrees.csv',header=TRUE)
pedigrees = as.data.frame(pedigrees)
ped.ID <- pedigree(id=pedigrees$IID, dadid=pedigrees$PID, momid=pedigrees$MID,
sex=pedigrees$SEX, famid=pedigrees$FID, missid=0)
#============================================================#
# Loading packages
#============================================================#
library(GMMAT)
library(MQMVtest)
library(data.table)
library(kinship2)
library(RNOmni)
library(GMMAT)
library(MQMVtest)
library(data.table)
library(kinship2)
library(RNOmni)
mixed = fread('/Users/weiyifang/Desktop/MQMVtest/data/mixed.csv',header=TRUE)
mixed = as.data.frame(mixed)
pedigrees = fread('/Users/weiyifang/Desktop/MQMVtest/data/pedigrees.csv',header=TRUE)
pedigrees = as.data.frame(pedigrees)
unrelated = fread('/Users/weiyifang/Desktop/MQMVtest/data/unrelated.csv',header=TRUE)
unrelated = as.data.frame(unrelated)
#============================================================#
# step 1 for mixed data
#============================================================#
#==============================
# Calculate the kinship coefficient
#==============================
ped.ID <- pedigree(id=pedigrees$IID, dadid=pedigrees$PID, momid=pedigrees$MID,
sex=pedigrees$SEX, famid=pedigrees$FID, missid=0)
kin <- kinship(ped.ID,"x")
dim(kin)
kin_order = colnames(kin)
match_idx <- match(kin_order, pedigrees$IID)
class(kin_order)
ped_final_sort = pedigrees[match_idx, ]
## Convert to a genetic correlation matrix
kin[ped_final_sort$SEX==1,ped_final_sort$SEX==2]=sqrt(2)*kin[ped_final_sort$SEX==1,ped_final_sort$SEX==2]
kin[ped_final_sort$SEX==2,ped_final_sort$SEX==1]=sqrt(2)*kin[ped_final_sort$SEX==2,ped_final_sort$SEX==1]
kin[ped_final_sort$SEX==2,ped_final_sort$SEX==2]=2*kin[ped_final_sort$SEX==2,ped_final_sort$SEX==2]
kin<-as.matrix(kin)
kin1<-kin[row.names(kin) %in% mixed$IID,row.names(kin) %in% mixed$IID]
GRM <- matrix(0,nrow=nrow(mixed),ncol=nrow(mixed),dimnames=list(mixed$IID,mixed$IID))
diag(GRM) <- rep(1,nrow(mixed))
common_ids <- intersect(rownames(kin), mixed$IID)
GRM[common_ids, common_ids] <- kin[common_ids, common_ids]
GRM <- as.matrix(GRM)
GRM <- as(GRM, "sparseMatrix")
rownames(GRM) <- c(1:nrow(GRM))
colnames(GRM) <- c(1:nrow(GRM))
mixed$HDL = RankNorm(mixed$HDL)
colnames(mixed)[1:30]
mixed_results_1 = MQMV_test(Genotype = mixed[,19],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_1
mixed_results_2 = MpMV_test(Genotype = mixed[,19],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_2 = MpMV_test(Genotype = mixed[,20],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_2 = MpMV_test(Genotype = mixed[,21],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_2 = MpMV_test(Genotype = mixed[,22],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_2 = MpMV_test(Genotype = mixed[,2221],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_2 = MpMV_test(Genotype = mixed[,223],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_2 = MpMV_test(Genotype = mixed[,2256],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_2 = MpMV_test(Genotype = mixed[,227],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_2 = MpMV_test(Genotype = mixed[,444],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_3 = McMV_test(Genotype = mixed[,19],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_3 = McMV_test(Genotype = mixed[,195],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_3 = McMV_test(Genotype = mixed[,4],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_3 = McMV_test(Genotype = mixed[,888],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_3 = McMV_test(Genotype = mixed[,882],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_3 = McMV_test(Genotype = mixed[,883],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
mixed_results_3 = McMV_test(Genotype = mixed[,884],
Y = mixed[,'HDL'],
Sex = mixed[,'SEX'],
Covariate = mixed[,c("Age_at_recruitment", "PC1_AVG","PC2_AVG","PC3_AVG","PC4_AVG","PC5_AVG","PC6_AVG","PC7_AVG","PC8_AVG","PC9_AVG","PC10_AVG")],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
#==============================
# Calculate the kinship coefficient
#==============================
ped.ID <- pedigree(id=pedigrees$IID, dadid=pedigrees$PID, momid=pedigrees$MID,
sex=pedigrees$SEX, famid=pedigrees$FID, missid=0)
kin <- kinship(ped.ID,"x")
dim(kin)
#=================================
#Ensure that the order of the samples matches that of the kin when converting to the genetic correlation matrix
#=================================
kin_order = colnames(kin)
match_idx <- match(kin_order, pedigrees$IID)
ped_final_sort = pedigrees[match_idx, ]
ped_final_sort$IID[1:10]
## genetic correlation matrix
kin[ped_final_sort$SEX==1,ped_final_sort$SEX==2]=sqrt(2)*kin[ped_final_sort$SEX==1,ped_final_sort$SEX==2]
kin[ped_final_sort$SEX==2,ped_final_sort$SEX==1]=sqrt(2)*kin[ped_final_sort$SEX==2,ped_final_sort$SEX==1]
kin[ped_final_sort$SEX==2,ped_final_sort$SEX==2]=2*kin[ped_final_sort$SEX==2,ped_final_sort$SEX==2]
kin<-as.matrix(kin)
# for general peigrees
GRM = as(kin, "sparseMatrix")
rownames(GRM)=c(1:nrow(GRM))
colnames(GRM)=c(1:nrow(GRM))
library(RNOmni)
pedigrees$HDL = RankNorm(pedigrees$HDL)
colnames(pedigrees)[1:30]
ped_results_1 = MQMV_test(Genotype = pedigrees[,19],
Y = pedigrees[,'HDL'],
Sex = pedigrees[,'SEX'],
Covariate = pedigrees[,"Age_at_recruitment"],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
ped_results_2 = MpMV_test(Genotype = pedigrees[,19],
Y = pedigrees[,'HDL'],
Sex = pedigrees[,'SEX'],
Covariate = pedigrees[,"Age_at_recruitment"],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
ped_results_3 = McMV_test(Genotype = pedigrees[,19],
Y = pedigrees[,'HDL'],
Sex = pedigrees[,'SEX'],
Covariate = pedigrees[,"Age_at_recruitment"],
missing_cutoff = 0.15,
MGC_Cutoff = 2,
kins = GRM,
method = 'all')
ped_results_3
ped_results_2
ped_results_1
